
##### (1) 使用nginx 容器


root@zhuzhiyuan-virtual-machine:~# wrk -c100 http://172.17.0.5 
Running 10s test @ http://172.17.0.5
  2 threads and 100 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency    38.60ms   12.30ms  94.33ms   64.17%
    Req/Sec     1.30k   138.16     1.72k    70.00%
  25857 requests in 10.02s, 4.07MB read
Requests/sec:   2580.93
Transfer/sec:    415.87KB

Running 10s test @ http://172.17.0.5
  2 threads and 100 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency    35.20ms   14.76ms 116.38ms   68.51%
    Req/Sec     1.43k   249.62     2.18k    71.00%
  28441 requests in 10.02s, 4.48MB read
Requests/sec:   2838.37
Transfer/sec:    457.36KB

Running 10s test @ http://172.17.0.5
  2 threads and 100 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency    37.89ms   18.10ms 107.96ms   62.71%
    Req/Sec     1.33k   205.27     1.91k    70.50%
  26384 requests in 10.02s, 4.15MB read
Requests/sec:   2632.02
Transfer/sec:    424.10KB


##### (2) 使用airpline 加载 xdp程序

# 编译字节码，生成脚手架文件 
clang -g -O2 -target bpf -D__TARGET_ARCH_x86 -I/usr/include/x86_64-linux-gnu -I. -c xdp-proxy.bpf.c -o xdp-proxy.bpf.o
bpftool gen skeleton xdp-proxy.bpf.o > xdp-proxy.skel.h

# 编译用户态程序  (或者直接make)
clang -g -O2 -Wall -I. -c xdp-proxy.c -o xdp-proxy.o
clang -Wall -O2 -g xdp-proxy.o -static -lbpf -lelf -lz -o xdp-proxy


# 拷贝到docker 中执行
docker cp xdp-proxy lb:/
docker exec -it lb /xdp-proxy

# wrk 测试 （??? 延时竟然更高了）

root@zhuzhiyuan-virtual-machine:~# wrk -c100 http://172.17.0.5 
Running 10s test @ http://172.17.0.5
  2 threads and 100 connections
  Thread Stats   Avg      Stdev     Max   +/- Stdev
    Latency   274.53ms  383.31ms   1.73s    86.78%
    Req/Sec   138.74    102.36   700.00     74.60%
  2853 requests in 10.08s, 507.08KB read
  Socket errors: connect 0, read 0, write 0, timeout 42
Requests/sec:    282.93
Transfer/sec:     50.29KB